<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Tracker</title>
    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
    </style>
</head>
<body>
    <h1>Task Tracker</h1>
    <form action="/add-task" method="post">
        <label for="taskName">New Task:</label>
        <input type="text" id="taskName" name="taskName" required>
        <button type="submit">ADD</button>
    </form>
    <hr>

    <% const sections = [
        {title: 'Unstarted Tasks', filter: task => task.status === 'UNSTARTED', color: 'blue'},
        {title: 'Started Tasks', filter: task => task.status === 'STARTED', color: 'orange'},
        {title: 'Completed Tasks', filter: task => task.status === 'COMPLETED', color: 'green'}
    ]; %>

    <% sections.forEach((section, index) => { %>
        <h2><%= section.title %></h2>
        <table id="section-<%= index %>">
            <thead>
                <tr>
                    <th onclick="sortTable(<%= index %>, 0)">Name</th>
                    <th onclick="sortTable(<%= index %>, 1)">Status</th>
                    <th onclick="sortTable(<%= index %>, 2)">Date Added</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% tasks.filter(task => section.filter(task) && task.class !== 'ARCHIVED').forEach(task => { %>
                    <tr>
                        <td><span style="color: <%= sections[index].color %>;"><%= task.name %></span></td>
                        <td><%= task.status %></td>
                        <td><%= task.dateAdded %></td>
                        <td>
                            <button onclick="location.href='/start-task?taskId=<%= task.id %>'">START</button>
                            <button onclick="location.href='/complete-task?taskId=<%= task.id %>'">COMPLETE</button>
                            <button onclick="location.href='/delete-task?taskId=<%= task.id %>'">DELETE</button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    <% }) %>

    <h2>Archived Tasks</h2>
    <table id="archived">
        <thead>
            <tr>
                <th onclick="sortTable('archived', 0)">Name</th>
                <th onclick="sortTable('archived', 1)">Status</th>
                <th onclick="sortTable('archived', 2)">Date Added</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% tasks.filter(task => task.class === 'ARCHIVED').forEach(task => { %>
                <tr>
                    <td><%= task.name %></td>
                    <td><%= task.status %></td>
                    <td><%= task.dateAdded %></td>
                    <td>
                        <button onclick="if (confirmDelete()) { location.href='/delete-task?taskId=<%= task.id %>' }">DELETE</button>
                        <button onclick="location.href='/readd-task?taskId=<%= task.id %>'">RE-ADD</button>
                    </td>
            </tr>
        <% }) %>
    </tbody>
</table>

<script>
    function confirmDelete() {
        return confirm('Are you sure you want to delete this task?');
    }

    function sortTable(tableId, columnIndex) {
        let table;
        if (typeof tableId === 'number') {
            table = document.getElementById('section-' + tableId);
        } else {
            table = document.getElementById(tableId);
        }
        let rows, switching, i, x, y, shouldSwitch, direction, switchCount = 0;
        switching = true;
        direction = "asc";

        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[columnIndex];
                y = rows[i + 1].getElementsByTagName("TD")[columnIndex];

                if (direction === "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (direction === "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchCount++;
            } else {
                if (switchCount === 0 && direction === "asc") {
                    direction = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
</body>
</html>
